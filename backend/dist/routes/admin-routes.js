"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const require_auth_middleware_1 = require("../middleware/require-auth-middleware");
const client_1 = require("@prisma/client");
const auth_controller_1 = require("../controllers/auth-controller");
const admin_controller_1 = require("../controllers/admin-controller");
const merchant_controller_1 = require("../controllers/merchant-controller");
const router = (0, express_1.Router)();
router.get("/", (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (req, res) => admin_controller_1.adminController.getAdmins(req, res));
router.post("/", (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN, client_1.AdminRole.OPS_ADMIN]), (req, res) => auth_controller_1.authController.addNewAdmin(req, res));
router.get('/merchants', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), (req, res) => merchant_controller_1.merchantController.getMerchants(req, res));
router.put('/merchants/:merchant_id', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), (req, res) => merchant_controller_1.merchantController.updateMerchant(req, res));
router.put('/merchants/:merchant_id/approval', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), (req, res) => admin_controller_1.adminController.approveMerchant(req, res));
router.delete('/merchants/:merchant_id', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN, client_1.AdminRole.OPS_ADMIN]), (req, res) => merchant_controller_1.merchantController.deleteMerchant(req, res));
router.get('/:id', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.get("/", (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.put("/:id", (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN]), () => { });
router.delete("/:id", (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN]), () => { });
router.get('/users', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.get('/users/:userId', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.put('/users/:userId/status', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN, client_1.AdminRole.OPS_ADMIN]), () => { });
router.delete('/users/:userId', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN]), () => { });
router.get('/queues', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.get('/queues/:queueId', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.delete('/queues/:queueId', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN, client_1.AdminRole.OPS_ADMIN]), () => { });
router.put('/queues/:queueId/status', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)([client_1.AdminRole.SUPER_ADMIN, client_1.AdminRole.OPS_ADMIN]), () => { });
router.get('/analytics/overview', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.get('/analytics/merchants', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.get('/analytics/users', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
router.get('/analytics/queues', (0, require_auth_middleware_1.requireAuth)([client_1.UserRole.ADMIN]), (0, require_auth_middleware_1.requireAdminRole)(), () => { });
exports.default = router;
